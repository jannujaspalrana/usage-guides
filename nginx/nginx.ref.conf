user nginx;
worker_processes auto;
worker_rlimit_nofile 60000;
error_log /log/nginx/error.log warn;
pid /var/run/nginx.pid;

thread_pool pool_1 threads=32;
thread_pool pool_2 threads=32;
thread_pool pool_3 threads=32;

events {
	use epoll;
	worker_connections 60000;
	multi_accept on;
}

http {
	# Look for client IP in the X-Forwarded-For header
	real_ip_header X-Forwarded-For;

	# Ignore trusted IPs
	real_ip_recursive on;

	# Set times subnet as trusted
	#set_real_ip_from 192.168.0.0/0;
	set_real_ip_from 0.0.0.0/0;

	#connections per client
	limit_conn_zone $binary_remote_addr zone=conn_perip:10m;
	limit_req_zone $binary_remote_addr zone=perip:50m rate=2000r/s;
	limit_req_zone $server_name zone=perserver:50m rate=20000r/s;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	log_format main '"$remote_addr" [$time_local] "$request" '
	'"$status" "$body_bytes_sent" '
	'"$request_time" "$upstream_response_time" "$upstream_addr" '
	'"$http_referer" "$http_user_agent" "$remote_user" $http_x_forwarded_for';
	
	access_log /log/nginx/access.log main;
	
	proxy_cache_path /www1/cache levels=1:2 keys_zone=cache_1:250m max_size=90g inactive=5m use_temp_path=off;
	proxy_cache_path /www2/cache levels=1:2 keys_zone=cache_2:250m max_size=90g inactive=5m use_temp_path=off;
	proxy_cache_path /www3/cache levels=1:2 keys_zone=cache_3:250m max_size=90g inactive=5m use_temp_path=off;
	
	proxy_buffering on;
	proxy_buffer_size 4k;
	proxy_buffers 16 8k;

	sendfile on;
	sendfile_max_chunk 128k;
	tcp_nopush on;
	tcp_nodelay on;

	reset_timedout_connection on;
	types_hash_max_size 2048;
	server_tokens off;
	server_names_hash_bucket_size 256;
	client_max_body_size 32k;
	client_body_buffer_size 32k;
	client_body_in_single_buffer on;
	client_body_timeout 10s;
	client_header_timeout 10s;
	client_header_buffer_size 32k;
	large_client_header_buffers 4 32k;

	keepalive_timeout 30;

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
	include /etc/nginx/sites-available/*;

	split_clients $request_uri $disk {
		33% 1;
		33% 2;
		34% 3;
	}

	upstream np_servers {
		hash $request_uri consistent;
		server 192.168.37.52:8080 max_conns=50 weight=1;
		server 192.168.37.95:8080 max_conns=50 weight=1;
		server 192.168.37.180:8080 max_conns=50 weight=1;
		server 172.29.15.129:8080 max_conns=50 weight=1;
		server 172.29.15.12:8080 max_conns=50 weight=1;
		server 172.24.89.86:8080 max_conns=50 weight=1;
    		server 172.24.89.87:8080 max_conns=50 weight=1;
    		server 172.24.89.88:8080 max_conns=50 weight=1;
		keepalive 30;
	}

	upstream np_servers_locate {
		server 192.168.37.52:8080 max_conns=100 weight=1;
                server 192.168.37.95:8080 max_conns=100 weight=1;
                server 192.168.37.180:8080 max_conns=100 weight=1;
                server 172.29.15.129:8080 max_conns=100 weight=1;
                server 172.29.15.12:8080 max_conns=100 weight=1;
                server 172.24.89.86:8080 max_conns=100 weight=1;
                server 172.24.89.87:8080 max_conns=100 weight=1;
                server 172.24.89.88:8080 max_conns=100 weight=1;
		keepalive 30;
	}

	upstream search_solr_servers {
		#hash $request_uri consistent;
		server 192.168.42.211:8983 weight=1;
		server 192.168.42.52:8983 weight=1;
		server 192.168.42.74:8983 weight=1;
		server 192.168.42.212:8983 weight=1;
	}

	upstream facedetector {
		server 172.29.15.125:8000 weight=1;
		server 172.29.15.126:8000 weight=1;
	}

	upstream rw_servers {
		#hash $request_uri consistent;
		server 172.29.15.145:8080 weight=1;
		server 172.29.15.146:8080 weight=1;
		server 172.29.15.147:8080 weight=1;
	}

	map $http_realip $REALIP {
		default $http_realip;
		'' $remote_addr;
	}

	map $http_upgrade $connection_upgrade {
		default upgrade;
		'' close;
	}

        map $arg_ab $proxy_cache_bypass {
        	default "0";
    		true    "1";
    	}

    	map $arg_ab $cache_header {
        	true     $cache_off;
        	default	 $cache_on;	
    	}

	upstream websocket {
		server localhost:7890;
	}

	server {
		listen 8010;
		keepalive_timeout 300;
		location / {

			proxy_pass http://websocket;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection $connection_upgrade;
		}
	}
}